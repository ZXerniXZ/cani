{"ast":null,"code":"// Questo service worker è base per PWA e notifiche push\n// CRA lo userà come custom service worker\n// @ts-ignore\nself.addEventListener('push',function(event){const pushEvent=event;// cast per accedere a .data\nconst data=pushEvent.data?pushEvent.data.json():{};const title=data.title||'Notifica Giardino';const options={body:data.body||'',icon:'/logo192.png',badge:'/logo192.png',data:data.url?{url:data.url}:{}};// @ts-ignore\nevent.waitUntil(self.registration.showNotification(title,options));});// @ts-ignore\nself.addEventListener('notificationclick',function(event){// @ts-ignore\nevent.notification.close();// @ts-ignore\nif(event.notification.data&&event.notification.data.url){// @ts-ignore\nevent.waitUntil(clients.openWindow(event.notification.data.url));}});// Per caching e offline, puoi aggiungere qui logica Workbox o custom","map":{"version":3,"names":["self","addEventListener","event","pushEvent","data","json","title","options","body","icon","badge","url","waitUntil","registration","showNotification","notification","close","clients","openWindow"],"sources":["/home/ares-desktop/localRepo/cani/mqtt-react-demo/src/service-worker.ts"],"sourcesContent":["// Questo service worker è base per PWA e notifiche push\n// CRA lo userà come custom service worker\n\n// @ts-ignore\nself.addEventListener('push', function(event) {\n  const pushEvent = event as any; // cast per accedere a .data\n  const data = pushEvent.data ? pushEvent.data.json() : {};\n  const title = data.title || 'Notifica Giardino';\n  const options = {\n    body: data.body || '',\n    icon: '/logo192.png',\n    badge: '/logo192.png',\n    data: data.url ? { url: data.url } : {},\n  };\n  // @ts-ignore\n  event.waitUntil(self.registration.showNotification(title, options));\n});\n\n// @ts-ignore\nself.addEventListener('notificationclick', function(event) {\n  // @ts-ignore\n  event.notification.close();\n  // @ts-ignore\n  if (event.notification.data && event.notification.data.url) {\n    // @ts-ignore\n    event.waitUntil(clients.openWindow(event.notification.data.url));\n  }\n});\n\n// Per caching e offline, puoi aggiungere qui logica Workbox o custom "],"mappings":"AAAA;AACA;AAEA;AACAA,IAAI,CAACC,gBAAgB,CAAC,MAAM,CAAE,SAASC,KAAK,CAAE,CAC5C,KAAM,CAAAC,SAAS,CAAGD,KAAY,CAAE;AAChC,KAAM,CAAAE,IAAI,CAAGD,SAAS,CAACC,IAAI,CAAGD,SAAS,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAG,CAAC,CAAC,CACxD,KAAM,CAAAC,KAAK,CAAGF,IAAI,CAACE,KAAK,EAAI,mBAAmB,CAC/C,KAAM,CAAAC,OAAO,CAAG,CACdC,IAAI,CAAEJ,IAAI,CAACI,IAAI,EAAI,EAAE,CACrBC,IAAI,CAAE,cAAc,CACpBC,KAAK,CAAE,cAAc,CACrBN,IAAI,CAAEA,IAAI,CAACO,GAAG,CAAG,CAAEA,GAAG,CAAEP,IAAI,CAACO,GAAI,CAAC,CAAG,CAAC,CACxC,CAAC,CACD;AACAT,KAAK,CAACU,SAAS,CAACZ,IAAI,CAACa,YAAY,CAACC,gBAAgB,CAACR,KAAK,CAAEC,OAAO,CAAC,CAAC,CACrE,CAAC,CAAC,CAEF;AACAP,IAAI,CAACC,gBAAgB,CAAC,mBAAmB,CAAE,SAASC,KAAK,CAAE,CACzD;AACAA,KAAK,CAACa,YAAY,CAACC,KAAK,CAAC,CAAC,CAC1B;AACA,GAAId,KAAK,CAACa,YAAY,CAACX,IAAI,EAAIF,KAAK,CAACa,YAAY,CAACX,IAAI,CAACO,GAAG,CAAE,CAC1D;AACAT,KAAK,CAACU,SAAS,CAACK,OAAO,CAACC,UAAU,CAAChB,KAAK,CAACa,YAAY,CAACX,IAAI,CAACO,GAAG,CAAC,CAAC,CAClE,CACF,CAAC,CAAC,CAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}